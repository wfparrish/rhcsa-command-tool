11/30/2024

Started the RHCSA command tool project

to start the frontend, go to the frontend folder and type:
npm start

to start the backend, go to the backend folder and type:
node server.js

Video #1

Created the frontend folder
-added the React app using:
npx create-react-app frontend 

-this created the npm library node_modules the package-lock.json and package.json folder, 
along with a .gitignore file

Created the first video tutorial in the series introducing the problem:
https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=4ed20275-92ff-4182-91ac-b23801195900&start=0

Here is the ChatGPT chat that has the code
https://chatgpt.com/c/674b2107-8a08-8002-bc4b-83d2615036b3

************************************************************************

Video #2

Panapto link:
https://ucdenver.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=aa5e9e21-911f-413d-9ca5-b2380136ca78&start=0

Here is the ChatGPT chat that has the code
https://chatgpt.com/c/674b2107-8a08-8002-bc4b-83d2615036b3

Added the Test, Question, and Step components in the frontend folder
Added the backend folder

Added the npm library to the backend
-this created the npm library node_modules the package-lock.json and package.json folder, 
but it didn't create a .gitignore, I'll probably need to add that later

-added the questions.json file
-created the server.js file

For now run:
node server.js
to see the server spin up on http://localhost:5000

************************************************************************

Video #3

So based on the format I have now, I'm updating the questions list

Using ChatGPT to generate the Step questions for the UI using the work I've already
done to create command lists for the questions.

Fixed a bug in the UI where the correct or incorrect textbox wouldn't go away when moving to another question
https://chatgpt.com/c/674b8255-0370-8002-a653-356df5bc4af9

Created the Github repo for the project:
https://github.com/wfparrish/rhcsa-command-tool.git

using main as the word for the main branch

git push origin main

***************************************************************************

What I think would be cool is if at the bottom of each screen I had a simulated terminal
In that terminal you could enter each command one after another and get the output from them like you would on the Test
It would let you reinforce what you are learning with each separate command entered

------------------------------------------------------------------------------------------

12/1

Added about 55 questions to the app
Used the scripts that I wanted to write as the basis, should work nicely with RHCSA objectives and memorization

Also added explanations
-I thought I needed to create a component but that wasn't necessary
-I'm just updating the UI with muliple JSX components when I get response of whether the answer is correct or not.

It could be that I should split this off into a component, but right now I don't think there is any harm


------------------------------------------------------------------------------------------

12/7

Added Nodemon to make backend development easier

You can start the server with this command:

npm run dev
or 
npm run start

Also adding mongodb so I will need to start the mongodb server with the command:

mongod

Installing mongoose

The mongodb will have the name rhcsaPractice assigned in the file db.js

Added the mongoose folder models and the files Question.js and UserAttempt.js
Added the seed.js file and the questions from the original questions.json file

To populate the mongodb database with data you will have to run 

npm run seed

The database was successfully seeded. 

ChatGPT couldn't seem to get the updates to the state by removing the Correct or Incorrect by touch correctly

As a compromise, I added a Clear Attempts button at the bottom of each question
It clears all Steps from the page at once. 

Also I'm using Local Storage to save what question I'm working on at any given time, so that refreshes 
don't take me back to Question 1 every time I refresh the browser

ChatGPT said if I make this a multiuser environment I'll have to create a different solution for this problem

This current functionality should be enough for me to work on the RHCSA test and have the ability to see what I've gotten correct and incorrect

Correction: I'm not sure why but for some reason it is working correctly. 
The removal of Correct or Incorrect by clicking the div is working and the UI is displaying the updates after refreshes

So to summarize:

To start in the backend run

1. mongod
2. npm run dev
or 
npm run start
3. npm run seed

And then in the frontend run

npm start

-------------------------------------------------------------------------------------------

12/8 

Created more explanations for questions, stopped at 31

-------------------------------------------------------------------------------------------

12/14

Completed all the questions, will need to go question by question to modify the answers
Should start with question 1 and update so that the questions are unique to this program with original language

-----------------------------------------------------------------------------------------------

12/21

Hereâ€™s a summary of the updates we made:

Server Names:
Original: Referenced generically (e.g., "Server" or "ServerB").
Updated: Jump Server or Client Server 1, Client Server 2, etc...

Connection Name:
Original: myprofile1.
Updated: Renamed to customprofile to provide a more meaningful and specific name for the NetworkManager connection profile.

Interface Name:
Original: enp0s3.
Updated: Changed to ens160 based on the system's actual interface naming convention, ensuring consistency with the output of ip link show.
These updates ensure alignment with the system's network configuration while improving clarity and context for the RHCSA-related tasks. 